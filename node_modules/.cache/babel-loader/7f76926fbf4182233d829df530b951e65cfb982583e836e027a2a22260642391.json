{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Mapup assignment\\\\half-ui\\\\src\\\\components\\\\Form.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Select, Button, Card } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchRegionInfo } from \"./RegionApi\"; // Import the fetchRegionInfo function from the regionApi.js file\nimport { setRegion, setRegionInfo, setCoordinates } from \"../actions\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst Form = () => {\n  _s();\n  const selectedRegion = useSelector(state => state.region.selectedRegion);\n  const regionInfo = useSelector(state => state.region.regionInfo); // Assuming regionInfo is stored in the 'region' slice of the Redux store\n  let coordinates = useSelector(state => state.region.coordinates);\n  const dispatch = useDispatch();\n  dispatch(setCoordinates(coordinates));\n  const handleLoadClick = async () => {\n    try {\n      switch (selectedRegion) {\n        case \"usa\":\n          await fetchRegionInfo(\"United States\");\n          break;\n        case \"india\":\n          await fetchRegionInfo(\"India\");\n          break;\n        case \"uk\":\n          await fetchRegionInfo(\"United Kingdom\");\n          break;\n        default:\n          dispatch(setRegionInfo(\"Please select a region.\"));\n      }\n    } catch (error) {\n      dispatch(setRegionInfo(error.message));\n    }\n  };\n  const handleRegionChange = value => {\n    dispatch(setRegion(value));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"floating-controls\",\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      style: {\n        width: 200,\n        marginRight: 16\n      },\n      placeholder: \"Select a region\",\n      onChange: handleRegionChange,\n      value: selectedRegion || undefined,\n      children: [/*#__PURE__*/_jsxDEV(Option, {\n        value: \"usa\",\n        children: \"United States\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Option, {\n        value: \"india\",\n        children: \"India\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Option, {\n        value: \"uk\",\n        children: \"United Kingdom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: handleLoadClick,\n      children: \"Load\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), regionInfo ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: regionInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"QVl8sdLy7wPpH1zLK4rEq0+dsSc=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","Select","Button","Card","useDispatch","useSelector","fetchRegionInfo","setRegion","setRegionInfo","setCoordinates","jsxDEV","_jsxDEV","Option","Form","_s","selectedRegion","state","region","regionInfo","coordinates","dispatch","handleLoadClick","error","message","handleRegionChange","value","className","children","style","width","marginRight","placeholder","onChange","undefined","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Mapup assignment/half-ui/src/components/Form.js"],"sourcesContent":["import React from \"react\";\r\nimport { Select, Button, Card } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchRegionInfo } from \"./RegionApi\"; // Import the fetchRegionInfo function from the regionApi.js file\r\nimport { setRegion, setRegionInfo, setCoordinates } from \"../actions\";\r\nimport \"../App.css\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst Form = () => {\r\n  const selectedRegion = useSelector((state) => state.region.selectedRegion);\r\n  const regionInfo = useSelector((state) => state.region.regionInfo); // Assuming regionInfo is stored in the 'region' slice of the Redux store\r\n  let coordinates = useSelector((state) => state.region.coordinates);\r\n  const dispatch = useDispatch();\r\n  dispatch(setCoordinates(coordinates));\r\n\r\n  const handleLoadClick = async () => {\r\n    try {\r\n      switch (selectedRegion) {\r\n        case \"usa\":\r\n          await fetchRegionInfo(\"United States\");\r\n          break;\r\n        case \"india\":\r\n          await fetchRegionInfo(\"India\");\r\n          break;\r\n        case \"uk\":\r\n          await fetchRegionInfo(\"United Kingdom\");\r\n          break;\r\n        default:\r\n          dispatch(setRegionInfo(\"Please select a region.\"));\r\n      }\r\n    } catch (error) {\r\n      dispatch(setRegionInfo(error.message));\r\n    }\r\n  };\r\n\r\n  const handleRegionChange = (value) => {\r\n    dispatch(setRegion(value));\r\n  };\r\n\r\n  return (\r\n    <div className=\"floating-controls\">\r\n      <Select\r\n        style={{ width: 200, marginRight: 16 }}\r\n        placeholder=\"Select a region\"\r\n        onChange={handleRegionChange}\r\n        value={selectedRegion || undefined}\r\n      >\r\n        <Option value=\"usa\">United States</Option>\r\n        <Option value=\"india\">India</Option>\r\n        <Option value=\"uk\">United Kingdom</Option>\r\n      </Select>\r\n      <Button type=\"primary\" onClick={handleLoadClick}>\r\n        Load\r\n      </Button>\r\n      {regionInfo ? (\r\n        <div className=\"card-container\">\r\n          <Card>\r\n            <b>\r\n              <p>{regionInfo}</p>\r\n            </b>\r\n          </Card>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}