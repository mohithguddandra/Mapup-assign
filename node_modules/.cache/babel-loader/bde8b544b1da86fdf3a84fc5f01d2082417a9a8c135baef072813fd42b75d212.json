{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Mapup assignment\\\\half-ui\\\\src\\\\components\\\\Cards.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Card } from \"antd\";\nimport { fetchRegionInfo } from \"./RegionApi\";\nimport { setCoordinates } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = () => {\n  _s();\n  const [regionInfo, setRegionInfo] = useState(null);\n  const selectedRegion = useSelector(state => state.region.selectedRegion);\n  let coordinates = useSelector(state => state.region.coordinates);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    async function fetchRegionData() {\n      try {\n        const cardData = await fetchRegionInfo(selectedRegion);\n        const {\n          name,\n          latlng,\n          timezones,\n          cca2\n        } = cardData;\n        const regionInfoText = `Region: ${name.common}\\nCoordinates: (${latlng[0]}, ${latlng[1]})${timezones ? `\\nTimezone: ${timezones}` : \"\"}${cca2 ? `\\nCountry Code: ${cca2}` : \"\"}`;\n        setRegionInfo(regionInfoText);\n        coordinates = [latlng[0], latlng[1]];\n        dispatch(setCoordinates(coordinates));\n      } catch (error) {\n        console.error(\"Error fetching region information:\", error);\n        setRegionInfo(\"Region information not found.\");\n      }\n    }\n    fetchRegionData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: regionInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Cards, \"KSxXhRDe+FJI5nlEyISUw8MIABY=\", true, function () {\n  return [useSelector, useSelector];\n});\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","Card","fetchRegionInfo","setCoordinates","jsxDEV","_jsxDEV","Cards","_s","regionInfo","setRegionInfo","selectedRegion","state","region","coordinates","dispatch","useDispatch","fetchRegionData","cardData","name","latlng","timezones","cca2","regionInfoText","common","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Mapup assignment/half-ui/src/components/Cards.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Card } from \"antd\";\r\nimport { fetchRegionInfo } from \"./RegionApi\";\r\nimport { setCoordinates } from \"../actions\";\r\n\r\nconst Cards = () => {\r\n  const [regionInfo, setRegionInfo] = useState(null);\r\n  const selectedRegion = useSelector((state) => state.region.selectedRegion);\r\n  let coordinates = useSelector((state) => state.region.coordinates);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    async function fetchRegionData() {\r\n      try {\r\n        const cardData = await fetchRegionInfo(selectedRegion);\r\n        const { name, latlng, timezones, cca2 } = cardData;\r\n        const regionInfoText = `Region: ${name.common}\\nCoordinates: (${\r\n          latlng[0]\r\n        }, ${latlng[1]})${timezones ? `\\nTimezone: ${timezones}` : \"\"}${\r\n          cca2 ? `\\nCountry Code: ${cca2}` : \"\"\r\n        }`;\r\n        setRegionInfo(regionInfoText);\r\n        coordinates = [latlng[0], latlng[1]];\r\n        dispatch(setCoordinates(coordinates));\r\n      } catch (error) {\r\n        console.error(\"Error fetching region information:\", error);\r\n        setRegionInfo(\"Region information not found.\");\r\n      }\r\n    }\r\n    fetchRegionData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card-container\">\r\n      <Card>\r\n        <b>\r\n          <p>{regionInfo}</p>\r\n        </b>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,IAAI,QAAQ,MAAM;AAC3B,SAASC,eAAe,QAAQ,aAAa;AAC7C,SAASC,cAAc,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAMW,cAAc,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACF,cAAc,CAAC;EAC1E,IAAIG,WAAW,GAAGb,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACC,WAAW,CAAC;EAClE,MAAMC,QAAQ,GAAGC,WAAW,CAAC,CAAC;EAE9BjB,SAAS,CAAC,MAAM;IACd,eAAekB,eAAeA,CAAA,EAAG;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMf,eAAe,CAACQ,cAAc,CAAC;QACtD,MAAM;UAAEQ,IAAI;UAAEC,MAAM;UAAEC,SAAS;UAAEC;QAAK,CAAC,GAAGJ,QAAQ;QAClD,MAAMK,cAAc,GAAI,WAAUJ,IAAI,CAACK,MAAO,mBAC5CJ,MAAM,CAAC,CAAC,CACT,KAAIA,MAAM,CAAC,CAAC,CAAE,IAAGC,SAAS,GAAI,eAAcA,SAAU,EAAC,GAAG,EAAG,GAC5DC,IAAI,GAAI,mBAAkBA,IAAK,EAAC,GAAG,EACpC,EAAC;QACFZ,aAAa,CAACa,cAAc,CAAC;QAC7BT,WAAW,GAAG,CAACM,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC;QACpCL,QAAQ,CAACX,cAAc,CAACU,WAAW,CAAC,CAAC;MACvC,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;QAC1Df,aAAa,CAAC,+BAA+B,CAAC;MAChD;IACF;IACAO,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKqB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7BtB,OAAA,CAACJ,IAAI;MAAA0B,QAAA,eACHtB,OAAA;QAAAsB,QAAA,eACEtB,OAAA;UAAAsB,QAAA,EAAInB;QAAU;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACxB,EAAA,CApCID,KAAK;EAAA,QAEcN,WAAW,EAChBA,WAAW;AAAA;AAAAgC,EAAA,GAHzB1B,KAAK;AAsCX,eAAeA,KAAK;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}