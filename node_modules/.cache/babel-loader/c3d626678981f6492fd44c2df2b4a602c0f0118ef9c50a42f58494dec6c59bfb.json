{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Mapup assignment\\\\half-ui\\\\src\\\\components\\\\Cards.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Card } from \"antd\";\nimport \"../App.css\";\nimport { setCoordinates } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = () => {\n  _s();\n  const [regionInfo, setRegionInfo] = useState(\"\"); // Set initial state to an empty string\n  const selectedRegion = useSelector(state => state.region.selectedRegion);\n  const {\n    name,\n    latlng,\n    timezones,\n    cca2\n  } = useSelector(state => state.region.regionInfo);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    var _latlng$, _latlng$2;\n    const regionInfoText = `Region: ${name.common}\\n ${timezones ? `\\nTimezone: ${timezones}` : \"\"}${cca2 ? `\\nCountry Code: ${cca2}` : \"\"}`;\n    const coordinates = [(_latlng$ = latlng === null || latlng === void 0 ? void 0 : latlng[0]) !== null && _latlng$ !== void 0 ? _latlng$ : 0, (_latlng$2 = latlng === null || latlng === void 0 ? void 0 : latlng[1]) !== null && _latlng$2 !== void 0 ? _latlng$2 : 0];\n    setRegionInfo(regionInfoText);\n    dispatch(setCoordinates(coordinates));\n  }, [selectedRegion, dispatch, name, latlng, timezones, cca2]);\n  return regionInfo ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: regionInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this) : null;\n};\n_s(Cards, \"+PgxLxUg0YyVsL4D2l5poXuf/z4=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","Card","setCoordinates","jsxDEV","_jsxDEV","Cards","_s","regionInfo","setRegionInfo","selectedRegion","state","region","name","latlng","timezones","cca2","dispatch","_latlng$","_latlng$2","regionInfoText","common","coordinates","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Mapup assignment/half-ui/src/components/Cards.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Card } from \"antd\";\r\nimport \"../App.css\";\r\nimport { setCoordinates } from \"../actions\";\r\n\r\nconst Cards = () => {\r\n  const [regionInfo, setRegionInfo] = useState(\"\"); // Set initial state to an empty string\r\n  const selectedRegion = useSelector((state) => state.region.selectedRegion);\r\n  const { name, latlng, timezones, cca2 } = useSelector(\r\n    (state) => state.region.regionInfo\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const regionInfoText = `Region: ${name.common}\\n ${\r\n      timezones ? `\\nTimezone: ${timezones}` : \"\"\r\n    }${cca2 ? `\\nCountry Code: ${cca2}` : \"\"}`;\r\n    const coordinates = [latlng?.[0] ?? 0, latlng?.[1] ?? 0];\r\n\r\n    setRegionInfo(regionInfoText);\r\n    dispatch(setCoordinates(coordinates));\r\n  }, [selectedRegion, dispatch, name, latlng, timezones, cca2]);\r\n\r\n  return regionInfo ? (\r\n    <div className=\"card-container\">\r\n      <Card>\r\n        <b>\r\n          <p>{regionInfo}</p>\r\n        </b>\r\n      </Card>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default Cards;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,IAAI,QAAQ,MAAM;AAC3B,OAAO,YAAY;AACnB,SAASC,cAAc,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAMW,cAAc,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACF,cAAc,CAAC;EAC1E,MAAM;IAAEG,IAAI;IAAEC,MAAM;IAAEC,SAAS;IAAEC;EAAK,CAAC,GAAGf,WAAW,CAClDU,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACJ,UAC1B,CAAC;EACD,MAAMS,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IAAA,IAAAoB,QAAA,EAAAC,SAAA;IACd,MAAMC,cAAc,GAAI,WAAUP,IAAI,CAACQ,MAAO,MAC5CN,SAAS,GAAI,eAAcA,SAAU,EAAC,GAAG,EAC1C,GAAEC,IAAI,GAAI,mBAAkBA,IAAK,EAAC,GAAG,EAAG,EAAC;IAC1C,MAAMM,WAAW,GAAG,EAAAJ,QAAA,GAACJ,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAG,CAAC,CAAC,cAAAI,QAAA,cAAAA,QAAA,GAAI,CAAC,GAAAC,SAAA,GAAEL,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAG,CAAC,CAAC,cAAAK,SAAA,cAAAA,SAAA,GAAI,CAAC,CAAC;IAExDV,aAAa,CAACW,cAAc,CAAC;IAC7BH,QAAQ,CAACd,cAAc,CAACmB,WAAW,CAAC,CAAC;EACvC,CAAC,EAAE,CAACZ,cAAc,EAAEO,QAAQ,EAAEJ,IAAI,EAAEC,MAAM,EAAEC,SAAS,EAAEC,IAAI,CAAC,CAAC;EAE7D,OAAOR,UAAU,gBACfH,OAAA;IAAKkB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7BnB,OAAA,CAACH,IAAI;MAAAsB,QAAA,eACHnB,OAAA;QAAAmB,QAAA,eACEnB,OAAA;UAAAmB,QAAA,EAAIhB;QAAU;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC,GACJ,IAAI;AACV,CAAC;AAACrB,EAAA,CA3BID,KAAK;EAAA,QAEcL,WAAW,EACQA,WAAW,EAGpCD,WAAW;AAAA;AAAA6B,EAAA,GANxBvB,KAAK;AA6BX,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}