{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Mapup assignment\\\\half-ui\\\\src\\\\components\\\\Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Select, Button } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchRegionInfo } from \"./RegionApi\"; // Import the fetchRegionInfo function from the regionApi.js file\nimport { setRegion, setRegionInfo } from \"../actions\";\nimport Cards from \"./Cards\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst Form = () => {\n  _s();\n  const selectedRegion = useSelector(state => state.region.selectedRegion);\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const handleLoadClick = async () => {\n    try {\n      setLoading(true);\n      switch (selectedRegion) {\n        case \"usa\":\n          await fetchRegionInfo(\"United States\");\n          break;\n        case \"india\":\n          await fetchRegionInfo(\"India\");\n          break;\n        case \"uk\":\n          await fetchRegionInfo(\"United Kingdom\");\n          break;\n        default:\n          dispatch(setRegionInfo(\"Please select a region.\"));\n      }\n    } catch (error) {\n      dispatch(setRegionInfo(error.message));\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleRegionChange = value => {\n    dispatch(setRegion(value));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"floating-controls\",\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      style: {\n        width: 200,\n        marginRight: 16\n      },\n      placeholder: \"Select a region\",\n      onChange: handleRegionChange,\n      value: selectedRegion || undefined,\n      children: [/*#__PURE__*/_jsxDEV(Option, {\n        value: \"usa\",\n        children: \"United States\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Option, {\n        value: \"india\",\n        children: \"India\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Option, {\n        value: \"uk\",\n        children: \"United Kingdom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: handleLoadClick,\n      loading: loading,\n      children: \"Load\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"UzhKWJ3A26xRM/tZERocQ0/jHfc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Select","Button","useDispatch","useSelector","fetchRegionInfo","setRegion","setRegionInfo","Cards","jsxDEV","_jsxDEV","Option","Form","_s","selectedRegion","state","region","dispatch","loading","setLoading","handleLoadClick","error","message","handleRegionChange","value","className","children","style","width","marginRight","placeholder","onChange","undefined","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Mapup assignment/half-ui/src/components/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Select, Button } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchRegionInfo } from \"./RegionApi\"; // Import the fetchRegionInfo function from the regionApi.js file\r\nimport { setRegion, setRegionInfo } from \"../actions\";\r\nimport Cards from \"./Cards\";\r\nimport \"../App.css\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst Form = () => {\r\n  const selectedRegion = useSelector((state) => state.region.selectedRegion);\r\n\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleLoadClick = async () => {\r\n    try {\r\n      setLoading(true);\r\n      switch (selectedRegion) {\r\n        case \"usa\":\r\n          await fetchRegionInfo(\"United States\");\r\n          break;\r\n        case \"india\":\r\n          await fetchRegionInfo(\"India\");\r\n          break;\r\n        case \"uk\":\r\n          await fetchRegionInfo(\"United Kingdom\");\r\n          break;\r\n        default:\r\n          dispatch(setRegionInfo(\"Please select a region.\"));\r\n      }\r\n    } catch (error) {\r\n      dispatch(setRegionInfo(error.message));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRegionChange = (value) => {\r\n    dispatch(setRegion(value));\r\n  };\r\n\r\n  return (\r\n    <div className=\"floating-controls\">\r\n      <Select\r\n        style={{ width: 200, marginRight: 16 }}\r\n        placeholder=\"Select a region\"\r\n        onChange={handleRegionChange}\r\n        value={selectedRegion || undefined}\r\n      >\r\n        <Option value=\"usa\">United States</Option>\r\n        <Option value=\"india\">India</Option>\r\n        <Option value=\"uk\">United Kingdom</Option>\r\n      </Select>\r\n      <Button type=\"primary\" onClick={handleLoadClick} loading={loading}>\r\n        Load\r\n      </Button>\r\n      <Cards />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}