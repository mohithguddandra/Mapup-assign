{"ast":null,"code":"import axios from \"axios\";\nexport const fetchRegionInfo = async region => {\n  try {\n    let response;\n    if (region === \"India\") {\n      response = await axios.get(`https://restcountries.com/v3.1/currency/INR`);\n    } else {\n      response = await axios.get(`https://restcountries.com/v3.1/name/${region}`);\n    }\n    const countryData = response.data[0];\n    if (countryData) {\n      const {\n        name,\n        latlng,\n        timezones,\n        cca2\n      } = countryData;\n      const regionInfoText = `Region: ${name.common}\\nCoordinates: (${latlng[0]}, ${latlng[1]})${timezones ? `\\nTimezone: ${timezones}` : \"\"}${cca2 ? `\\nCountry Code: ${cca2}` : \"\"}`;\n      const coordinates = [latlng[0], latlng[1]];\n      return {\n        regionInfoText,\n        coordinates\n      };\n    } else {\n      throw new Error(\"Region information not found.\");\n    }\n  } catch (error) {\n    console.error(\"Error fetching region information:\", error);\n    throw new Error(\"Error fetching region information. Please try again later.\");\n  }\n};","map":{"version":3,"names":["axios","fetchRegionInfo","region","response","get","countryData","data","name","latlng","timezones","cca2","regionInfoText","common","coordinates","Error","error","console"],"sources":["C:/Users/user/Desktop/Mapup assignment/half-ui/src/components/RegionApi.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const fetchRegionInfo = async (region) => {\r\n  try {\r\n    let response;\r\n    if (region === \"India\") {\r\n      response = await axios.get(`https://restcountries.com/v3.1/currency/INR`);\r\n    } else {\r\n      response = await axios.get(\r\n        `https://restcountries.com/v3.1/name/${region}`\r\n      );\r\n    }\r\n\r\n    const countryData = response.data[0];\r\n\r\n    if (countryData) {\r\n      const { name, latlng, timezones, cca2 } = countryData;\r\n      const regionInfoText = `Region: ${name.common}\\nCoordinates: (${\r\n        latlng[0]\r\n      }, ${latlng[1]})${timezones ? `\\nTimezone: ${timezones}` : \"\"}${\r\n        cca2 ? `\\nCountry Code: ${cca2}` : \"\"\r\n      }`;\r\n      const coordinates = [latlng[0], latlng[1]];\r\n      return { regionInfoText, coordinates };\r\n    } else {\r\n      throw new Error(\"Region information not found.\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching region information:\", error);\r\n    throw new Error(\r\n      \"Error fetching region information. Please try again later.\"\r\n    );\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,eAAe,GAAG,MAAOC,MAAM,IAAK;EAC/C,IAAI;IACF,IAAIC,QAAQ;IACZ,IAAID,MAAM,KAAK,OAAO,EAAE;MACtBC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,6CAA4C,CAAC;IAC3E,CAAC,MAAM;MACLD,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CACvB,uCAAsCF,MAAO,EAChD,CAAC;IACH;IAEA,MAAMG,WAAW,GAAGF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;IAEpC,IAAID,WAAW,EAAE;MACf,MAAM;QAAEE,IAAI;QAAEC,MAAM;QAAEC,SAAS;QAAEC;MAAK,CAAC,GAAGL,WAAW;MACrD,MAAMM,cAAc,GAAI,WAAUJ,IAAI,CAACK,MAAO,mBAC5CJ,MAAM,CAAC,CAAC,CACT,KAAIA,MAAM,CAAC,CAAC,CAAE,IAAGC,SAAS,GAAI,eAAcA,SAAU,EAAC,GAAG,EAAG,GAC5DC,IAAI,GAAI,mBAAkBA,IAAK,EAAC,GAAG,EACpC,EAAC;MACF,MAAMG,WAAW,GAAG,CAACL,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC;MAC1C,OAAO;QAAEG,cAAc;QAAEE;MAAY,CAAC;IACxC,CAAC,MAAM;MACL,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;IAClD;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,MAAM,IAAID,KAAK,CACb,4DACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}