{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Mapup assignment\\\\half-ui\\\\src\\\\components\\\\Floating.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Select, Button, Card } from \"antd\";\nimport \"./Floating.css\";\nimport axios from \"axios\"; // Import Axios for API requests\nimport { setRegion, setRegionInfo } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst Floating = () => {\n  _s();\n  const selectedRegion = useSelector(state => state.selectedRegion);\n  const regionInfo = useSelector(state => state.regionInfo);\n  const dispatch = useDispatch();\n  const handleRegionChange = value => {\n    dispatch(setRegion(value));\n  };\n  const handleLoadClick = async () => {\n    // Make API call to Nominatim based on the selected region\n    try {\n      const response = await axios.get(`https://nominatim.openstreetmap.org/search?q=${selectedRegion}&format=json&limit=1`);\n      const data = response.data[0];\n\n      // Extract the necessary information from the API response\n      const regionInfo = `Region: ${data.display_name}\\nCoordinates: (${data.lat}, ${data.lon})\\nTimezone: ${data.timezone}\\nCountry Code: ${data.address.country_code}`;\n      dispatch(setRegionInfo(regionInfo));\n    } catch (error) {\n      console.error(\"Error fetching region information:\", error);\n      dispatch(setRegionInfo(\"Error fetching region information. Please try again later.\"));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"floating-controls\",\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        style: {\n          width: 200,\n          marginRight: 16\n        },\n        placeholder: \"Select a region\",\n        onChange: handleRegionChange,\n        value: selectedRegion,\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          value: \"usa\",\n          children: \"United States\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"india\",\n          children: \"India\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"uk\",\n          children: \"United Kingdom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: handleLoadClick,\n        children: \"Load\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: regionInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Floating, \"LgXOD29t5ta1aW079j2otkCwFHg=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Floating;\nexport default Floating;\nvar _c;\n$RefreshReg$(_c, \"Floating\");","map":{"version":3,"names":["React","useSelector","useDispatch","Select","Button","Card","axios","setRegion","setRegionInfo","jsxDEV","_jsxDEV","Option","Floating","_s","selectedRegion","state","regionInfo","dispatch","handleRegionChange","value","handleLoadClick","response","get","data","display_name","lat","lon","timezone","address","country_code","error","console","className","children","style","width","marginRight","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Mapup assignment/half-ui/src/components/Floating.js"],"sourcesContent":["import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Select, Button, Card } from \"antd\";\r\n\r\nimport \"./Floating.css\";\r\n\r\nimport axios from \"axios\"; // Import Axios for API requests\r\nimport { setRegion, setRegionInfo } from \"../actions\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst Floating = () => {\r\n  const selectedRegion = useSelector((state) => state.selectedRegion);\r\n  const regionInfo = useSelector((state) => state.regionInfo);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleRegionChange = (value) => {\r\n    dispatch(setRegion(value));\r\n  };\r\n\r\n  const handleLoadClick = async () => {\r\n    // Make API call to Nominatim based on the selected region\r\n    try {\r\n      const response = await axios.get(\r\n        `https://nominatim.openstreetmap.org/search?q=${selectedRegion}&format=json&limit=1`\r\n      );\r\n      const data = response.data[0];\r\n\r\n      // Extract the necessary information from the API response\r\n      const regionInfo = `Region: ${data.display_name}\\nCoordinates: (${data.lat}, ${data.lon})\\nTimezone: ${data.timezone}\\nCountry Code: ${data.address.country_code}`;\r\n      dispatch(setRegionInfo(regionInfo));\r\n    } catch (error) {\r\n      console.error(\"Error fetching region information:\", error);\r\n      dispatch(\r\n        setRegionInfo(\r\n          \"Error fetching region information. Please try again later.\"\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"floating-controls\">\r\n        <Select\r\n          style={{ width: 200, marginRight: 16 }}\r\n          placeholder=\"Select a region\"\r\n          onChange={handleRegionChange}\r\n          value={selectedRegion}\r\n        >\r\n          <Option value=\"usa\">United States</Option>\r\n          <Option value=\"india\">India</Option>\r\n          <Option value=\"uk\">United Kingdom</Option>\r\n        </Select>\r\n        <Button type=\"primary\" onClick={handleLoadClick}>\r\n          Load\r\n        </Button>\r\n      </div>\r\n      <div className=\"card-container\">\r\n        <Card>{regionInfo}</Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Floating;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}