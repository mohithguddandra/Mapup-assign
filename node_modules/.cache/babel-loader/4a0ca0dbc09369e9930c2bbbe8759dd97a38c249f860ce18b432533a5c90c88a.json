{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Mapup assignment\\\\half-ui\\\\src\\\\components\\\\Floating.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Select, Button, Card } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { setRegion, setRegionInfo } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst Floating = () => {\n  _s();\n  const selectedRegion = useSelector(state => state.region.selectedRegion);\n  const regionInfo = useSelector(state => state.region.regionInfo);\n  const dispatch = useDispatch();\n  const fetchRegionInfo = async region => {\n    try {\n      const response = await axios.get(`https://nominatim.openstreetmap.org/search?q=${region}&format=json&limit=1`);\n      const data = response.data[0];\n      if (data) {\n        var _data$address;\n        const regionInfo = `Region: ${data.display_name}\\nCoordinates: (${data.lat}, ${data.lon})${data.timezone ? `\\nTimezone: ${data.timezone}` : \"\"}${(_data$address = data.address) !== null && _data$address !== void 0 && _data$address.country_code ? `\\nCountry Code: ${data.address.country_code}` : \"\"}`;\n        dispatch(setRegionInfo(regionInfo));\n      } else {\n        dispatch(setRegionInfo(\"Error: Region information not found.\"));\n      }\n    } catch (error) {\n      console.error(\"Error fetching region information:\", error);\n      dispatch(setRegionInfo(\"Error fetching region information. Please try again later.\"));\n    }\n  };\n  const handleLoadClick = () => {\n    switch (selectedRegion) {\n      case \"usa\":\n        fetchRegionInfo(\"United States\");\n        break;\n      case \"india\":\n        fetchRegionInfo(\"India\");\n        break;\n      case \"uk\":\n        fetchRegionInfo(\"United Kingdom\");\n        break;\n      default:\n        dispatch(setRegionInfo(\"Please select a region.\"));\n    }\n  };\n  const handleRegionChange = value => {\n    dispatch(setRegion(value));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"floating-controls\",\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      style: {\n        width: 200,\n        marginRight: 16\n      },\n      placeholder: \"Select a region\",\n      onChange: handleRegionChange,\n      value: selectedRegion,\n      children: [/*#__PURE__*/_jsxDEV(Option, {\n        value: \"usa\",\n        children: \"United States\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Option, {\n        value: \"india\",\n        children: \"India\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Option, {\n        value: \"uk\",\n        children: \"United Kingdom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: handleLoadClick,\n      children: \"Load\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: regionInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Floating, \"LgXOD29t5ta1aW079j2otkCwFHg=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Floating;\nexport default Floating;\nvar _c;\n$RefreshReg$(_c, \"Floating\");","map":{"version":3,"names":["React","useState","Select","Button","Card","useDispatch","useSelector","axios","setRegion","setRegionInfo","jsxDEV","_jsxDEV","Option","Floating","_s","selectedRegion","state","region","regionInfo","dispatch","fetchRegionInfo","response","get","data","_data$address","display_name","lat","lon","timezone","address","country_code","error","console","handleLoadClick","handleRegionChange","value","className","children","style","width","marginRight","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Mapup assignment/half-ui/src/components/Floating.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Select, Button, Card } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { setRegion, setRegionInfo } from \"../actions\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst Floating = () => {\r\n  const selectedRegion = useSelector((state) => state.region.selectedRegion);\r\n  const regionInfo = useSelector((state) => state.region.regionInfo);\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchRegionInfo = async (region) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://nominatim.openstreetmap.org/search?q=${region}&format=json&limit=1`\r\n      );\r\n      const data = response.data[0];\r\n      if (data) {\r\n        const regionInfo = `Region: ${data.display_name}\\nCoordinates: (${\r\n          data.lat\r\n        }, ${data.lon})${data.timezone ? `\\nTimezone: ${data.timezone}` : \"\"}${\r\n          data.address?.country_code\r\n            ? `\\nCountry Code: ${data.address.country_code}`\r\n            : \"\"\r\n        }`;\r\n        dispatch(setRegionInfo(regionInfo));\r\n      } else {\r\n        dispatch(setRegionInfo(\"Error: Region information not found.\"));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching region information:\", error);\r\n      dispatch(\r\n        setRegionInfo(\r\n          \"Error fetching region information. Please try again later.\"\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleLoadClick = () => {\r\n    switch (selectedRegion) {\r\n      case \"usa\":\r\n        fetchRegionInfo(\"United States\");\r\n        break;\r\n      case \"india\":\r\n        fetchRegionInfo(\"India\");\r\n        break;\r\n      case \"uk\":\r\n        fetchRegionInfo(\"United Kingdom\");\r\n        break;\r\n      default:\r\n        dispatch(setRegionInfo(\"Please select a region.\"));\r\n    }\r\n  };\r\n\r\n  const handleRegionChange = (value) => {\r\n    dispatch(setRegion(value));\r\n  };\r\n\r\n  return (\r\n    <div className=\"floating-controls\">\r\n      <Select\r\n        style={{ width: 200, marginRight: 16 }}\r\n        placeholder=\"Select a region\"\r\n        onChange={handleRegionChange}\r\n        value={selectedRegion}\r\n      >\r\n        <Option value=\"usa\">United States</Option>\r\n        <Option value=\"india\">India</Option>\r\n        <Option value=\"uk\">United Kingdom</Option>\r\n      </Select>\r\n      <Button type=\"primary\" onClick={handleLoadClick}>\r\n        Load\r\n      </Button>\r\n      <div className=\"card-container\">\r\n        <Card>{regionInfo}</Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Floating;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}