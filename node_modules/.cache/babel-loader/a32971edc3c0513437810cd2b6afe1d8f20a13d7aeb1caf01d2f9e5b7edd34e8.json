{"ast":null,"code":"import axios from \"axios\";\nexport const fetchRegionInfo = async region => {\n  try {\n    let response;\n    if (region === \"India\") {\n      response = await axios.get(`https://restcountries.com/v2/capital/new%20delhi        `);\n    } else {\n      response = await axios.get(`https://restcountries.com/v3.1/name/${region}`);\n    }\n    const countryData = response.data[0];\n    console.log(countryData);\n    return countryData;\n  } catch (error) {\n    console.error(\"Error fetching region information:\", error);\n    throw new Error(\"Error fetching region information. Please try again later.\");\n  }\n};","map":{"version":3,"names":["axios","fetchRegionInfo","region","response","get","countryData","data","console","log","error","Error"],"sources":["C:/Users/user/Desktop/Mapup assignment/half-ui/src/components/RegionApi.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const fetchRegionInfo = async (region) => {\r\n  try {\r\n    let response;\r\n\r\n    if (region === \"India\") {\r\n      response = await axios.get(\r\n        `https://restcountries.com/v2/capital/new%20delhi        `\r\n      );\r\n    } else {\r\n      response = await axios.get(\r\n        `https://restcountries.com/v3.1/name/${region}`\r\n      );\r\n    }\r\n\r\n    const countryData = response.data[0];\r\n    console.log(countryData);\r\n    return countryData;\r\n  } catch (error) {\r\n    console.error(\"Error fetching region information:\", error);\r\n    throw new Error(\r\n      \"Error fetching region information. Please try again later.\"\r\n    );\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,eAAe,GAAG,MAAOC,MAAM,IAAK;EAC/C,IAAI;IACF,IAAIC,QAAQ;IAEZ,IAAID,MAAM,KAAK,OAAO,EAAE;MACtBC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CACvB,0DACH,CAAC;IACH,CAAC,MAAM;MACLD,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CACvB,uCAAsCF,MAAO,EAChD,CAAC;IACH;IAEA,MAAMG,WAAW,GAAGF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;IACpCC,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;IACxB,OAAOA,WAAW;EACpB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,MAAM,IAAIC,KAAK,CACb,4DACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}