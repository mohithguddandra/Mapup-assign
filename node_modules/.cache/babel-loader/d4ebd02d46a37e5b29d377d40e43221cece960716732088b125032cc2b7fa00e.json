{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Mapup assignment\\\\half-ui\\\\src\\\\components\\\\Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Select, Button } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchRegionInfo } from \"./RegionApi\";\nimport { setRegion, setRegionInfo } from \"../actions\";\nimport Cards from \"./Cards\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst Form = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const selectedRegion = useSelector(state => state.region.selectedRegion);\n  const regionInfo = useSelector(state => state.region.regionInfo);\n  const dispatch = useDispatch();\n  const handleLoadClick = async () => {\n    try {\n      setLoading(true);\n      let cardData;\n      switch (selectedRegion) {\n        case \"usa\":\n          cardData = await fetchRegionInfo(\"United States\");\n          break;\n        case \"india\":\n          cardData = await fetchRegionInfo(\"India\");\n          break;\n        case \"uk\":\n          cardData = await fetchRegionInfo(\"United Kingdom\");\n          break;\n        default:\n          dispatch(setRegionInfo(\"Please select a region.\"));\n      }\n      if (cardData) {\n        dispatch(setRegionInfo(cardData)); // Clear any previous regionInfo error\n      }\n    } catch (error) {\n      dispatch(setRegionInfo(error.message));\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleRegionChange = value => {\n    dispatch(setRegion(value));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"floating-controls\",\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      style: {\n        width: 200,\n        marginRight: 16\n      },\n      placeholder: \"Select a region\",\n      onChange: handleRegionChange,\n      value: selectedRegion || undefined,\n      children: [/*#__PURE__*/_jsxDEV(Option, {\n        value: \"usa\",\n        children: \"United States\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Option, {\n        value: \"india\",\n        children: \"India\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Option, {\n        value: \"uk\",\n        children: \"United Kingdom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: handleLoadClick,\n      loading: loading,\n      children: \"Load\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      cardData: regionInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"NzCsqmFxoC7FKZeBs2LDAU9uluY=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Select","Button","useDispatch","useSelector","fetchRegionInfo","setRegion","setRegionInfo","Cards","jsxDEV","_jsxDEV","Option","Form","_s","loading","setLoading","selectedRegion","state","region","regionInfo","dispatch","handleLoadClick","cardData","error","message","handleRegionChange","value","className","children","style","width","marginRight","placeholder","onChange","undefined","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Mapup assignment/half-ui/src/components/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Select, Button } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchRegionInfo } from \"./RegionApi\";\r\nimport { setRegion, setRegionInfo } from \"../actions\";\r\nimport Cards from \"./Cards\";\r\nimport \"../App.css\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst Form = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const selectedRegion = useSelector((state) => state.region.selectedRegion);\r\n  const regionInfo = useSelector((state) => state.region.regionInfo);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLoadClick = async () => {\r\n    try {\r\n      setLoading(true);\r\n      let cardData;\r\n      switch (selectedRegion) {\r\n        case \"usa\":\r\n          cardData = await fetchRegionInfo(\"United States\");\r\n          break;\r\n        case \"india\":\r\n          cardData = await fetchRegionInfo(\"India\");\r\n          break;\r\n        case \"uk\":\r\n          cardData = await fetchRegionInfo(\"United Kingdom\");\r\n          break;\r\n        default:\r\n          dispatch(setRegionInfo(\"Please select a region.\"));\r\n      }\r\n\r\n      if (cardData) {\r\n        dispatch(setRegionInfo(cardData)); // Clear any previous regionInfo error\r\n      }\r\n    } catch (error) {\r\n      dispatch(setRegionInfo(error.message));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRegionChange = (value) => {\r\n    dispatch(setRegion(value));\r\n  };\r\n\r\n  return (\r\n    <div className=\"floating-controls\">\r\n      <Select\r\n        style={{ width: 200, marginRight: 16 }}\r\n        placeholder=\"Select a region\"\r\n        onChange={handleRegionChange}\r\n        value={selectedRegion || undefined}\r\n      >\r\n        <Option value=\"usa\">United States</Option>\r\n        <Option value=\"india\">India</Option>\r\n        <Option value=\"uk\">United Kingdom</Option>\r\n      </Select>\r\n      <Button type=\"primary\" onClick={handleLoadClick} loading={loading}>\r\n        Load\r\n      </Button>\r\n      <Cards cardData={regionInfo} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}